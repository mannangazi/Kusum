init 0=shut down
init 1=single user login
init 6=reboot
init 5 or start x =graphic mode
chown=change ownership
/etc/sysconfig/iptables=for changing firwall
ls -lh <file name>    for file size
lid -g <group name> for showing all users in a group

less-one page at a timeman 

rpm -ivh <package name> --nodeps --force     for install packege in cent os.
# rpm -Uvh package.rpm for upgrade package


For mount DVD

mkdir /rhce
mount /dev/dvd /rhce
cd /rhce
cd Package
install package (rpm -ivh <package name>)

bit of linux
#uname -i
id (for showing user details)
history n(For last n command)

user details save in /etc/passwd text file

user password save in /etc/shadow text file

group details save in /etc/group text file

022-67624360 shadiq phone no

chown -R user_name filedirectory ---ownership is changed with chown

chgrp -R group_name filedirectory ---group-ownership is changed with chgrp

chmod ugo+r file :Grant read access to all for file
chmod o-wx dir:Deny write and excute to others for dir
chmod --reference file1 file2 :Get the mode from file 1 and place on file 2

function of echo
fun()
{
date}
command-echo "today is $(fun)

Hi="My name is mannan"
command-echo ${HI}

command>file -Direct standard output of command to file
command>>file -Append standard output of command to file
command<file  -Send file as input to command
command 2>file -Redirect error messages from command to file
command 2>>file -append error messages from command to file

command1; command 2

So what are they?

A program is a series of instructions that tell the computer what to do. When we run a program, those instructions are copied into memory and space is allocated for variables and other stuff required to manage its execution. This running instance of a program is called a process and it's processes which we manage.

ps=Get a listing of processes running on the system.

ps -ef=Get a listing of processes running on the system.
top=View real-time data about processes running on the system.
ps -ef | grep bash = for showing particular bash process running or not.

ps -l=for showing all long listed running process in system.
ps ax=for showing all process.
ps ax | head -11 =for showing top 10 process including title.
pstree | grep -20 =process tree of 20 lineser

kill -9 [process id]= kill particular process forcefully.
kill -1 [process id]=for restart the the process
killall -9 [process name] 
kill -15 [process id]= kill particular process immidiately

sleep 99 & =for running in back ground
bg [job number]=running in back ground
fg [job number]=running in fore ground
jobs=for showing all running jobs.

/etc/sysconfig/network-scripts/ifcfg-ethx-Network device configuration is stored in text files.~
hwaddr-associate the configuration with a specific device, identified by MAC address.
BOOTPROTO-Set to dhcp to use DHCp.or set it to static to define ip settings.
ONBOOT=Whether to bring the device up automatically when the system boots. can be set yes or no.
USERCTL=whether to allow non-root users to bring this device up and down.can be set yes or no.
/etc/sysconfig/network-Global settings.
HOSTNAME-the system's hostname.this should be the DNS name that resolves to its primary IP address.
domain name service translates hostname to network addresses.
server address is specified by dhcp or in /etc/resolv.conf
/etc/cups/printers.conf=printer configuration stored in
lpr=sends a job to the queue to be printed
lpq=views the contents of the queue.
lprm=remove a job from the queue.
lpr -P accounting -#5 report.ps=To print 5 copies of the file report.ps on accounting printer.
lpstat -a=List of all configured printers.
date[MMDDhhmm[yyyy].ss]]=to set system date n time .
crontab -e=create crontab
crontab -l=to see all crontab list
crontab -r=remove crontab
minute,hour,day of month,month,day of week=crontab comment
# Minute   Hour   Day of Month       Month          Day of Week        Command    
# (0-59)  (0-23)     (1-31)    (1-12 or Jan-Dec)  (0-6 or Sun-Sat)                
    0        2          12             *                *            /usr/bin/find

which command
To locate the exact path of a program, you can use the
which command
Type
# which hostname

ans-/bin/hostname

file size for linux installation for 20 gb above hdd
swap=2 X RAM size
/   =15000
/boot=200
/home=4000
/usr=10000
/var=2000


zip -r filename.zip filesdir (normal file )
unzip filename.zip 
gzip filename-for zip of tar file 
gunzip filename.gz-for undo unzip
bzip2 filename -for doing bzip2
bunzip2 filename.bz2-for undoing bunzip2.
-c — create a new archive

-f — when used with the -c option, use the filename specified for the creation of the tar file; when used with the -x option, unarchive the specified file

-t — show the list of files in the tar file

-v — show the progress of the files being archived

-x — extract files from an archive

-z — compress the tar file with gzip

-j — compress the tar file with bzip2
tar -cvf filename.tar directory/file -for creating tar
tar -cvzf filename.tar.gz directory/file -for creating tar.gz
tar -cvjf filename.tar.bzip2 directory/file -for creating tar.bzip2
tar -tvf filename.tar.bzip2 or gz for showing files
tar -xvzf filename.tar.zip -for extracting file
tar -xvjf filename.tar.bzip2 -for extracting.  
for ssh and scp iptables need to stop and sshd(/etc/init.d/sshd start from root) start.need to install ssh in ubuntu syatem
scp <localfile> username@tohostname:<remotefile>
scp username@tohostname:<remotefile> <newlocalfile>
Images,text files ,hard links and excutables are all regular file.
Direcrory is list of other files and other directory.
the file that point to the location of another file is symbolic link file.
                                                   
ln -s target_path link_path -soft link file
ln target_path link_path    -hard link file

Every hardware device (except the network interface) available to the Linux system is represented by a device file inside the /dev location. Partitions and disks are no exception. Let's take a serial ATA hard disk as an example.

A SATA disk driver internally uses the SCSI layer to represent and access data. As such, a SATA device is represented as a SCSI device. The first SATA disk on your system is represented as /dev/sda, its first partition as /dev/sda1. You could read sda1 backwards as: "1st partition (1) on the first (a) scsi device (sd)".

~$ ls -l /dev/sda1
brw-rw---- 1 root disk 8,  1  Nov 12  10:10  /dev/sda1
Examples: Hard disk, DVD/CD ROM, and memory regions etc

character special file-Files referencing hardware are not regular files;they are one of two types of special files.character special files are used to communicate with hardware one character at a time.
Examples: Virtual terminals, terminals and serial modems etc

Named pipe:a file that passes data between processes.It stores no data itself, but passes data between one process writing data into named pipe and another process reading data from the named pipe.A named pipe can be created using mknod command:
command-mknod mypipe p
du produces text usage report(in kilobytes) by directory.
df produces text usage report(in kilobytes) by file system.
ext2 and msdos typically use for floppy.
iso9660 use for CD.
GFS and GFS2 use for SANs.
ext2 and ext3 file system keep a list of the files they contain in table called an inode tabe.an individual entry in the inode table is called inode.The inode is referenced by its number,the inode number,which is unique within file system.
among the data stored in the inode is:
the filetype,file permission,UID,GID.

touch -t yyyymmddhhmm.ss filename-for changing time stamps in file.

YuM repo creation(Without register RHN YUM running)

Mount DVD/CD rom

mkdir /dvdrom
mount /dvd/sr0 /dvdrom
cd /dvdrom
cd /Packages
rpm -ivh vsftpd*
rpm -ivh deltarpm*
rpm -ivh python-deltarpm*
rpm -ivh createrepo*
cd /
mkdir Repo
cd /dvdrom
cp -rvf Packages RPM-GPG-redhat-realese /Repo
cd /dvdrom 
#createrepo --database /Repo/Packages
cd /
vi /etc/yum.repos.d/basic.repo
[basic]
name=my basic repo 
baseurl=file:///Repo/Packages
enabled=1
gpgcheck=1
gpgkey=file:///Repo/RPM-GPG-KEY-redhat-release

during yum installation given an error warning: rpmts_HdrFromFdno: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY
solution;-(1) Insert RHEL cd/dvd and move to that location.

For eg: cd /media/RHEL<version>

(2) Execute the command " rpm --import *GPG* RPM-GPG-KEY-redhat-release " and " rpm --import *GPG* RPM-GPG-KEY-redhat-beta "... 

This will import the public keys for the yum installation.


You can finding out what dependencies a rpm file has i.e. it will tell you what you need to install package with following command:
rpm -qpR {.rpm-file}  (querypackagerequires)
rpm -qR {package-name}
                       
                         YUM(Package Installation)

# yum list available -List packages available to be installed
# yum list installed -List packages already installed
# yum list extras    -List the packages installed on the system that are not available in any yum repository listed in the config file.
# yum list *vorbis*  -List packages with “vorbis” in title
# yum list updates   -List packages that have updates available
# yum grouplist      -List packages in group
# yum repolist all   -List all the repos
Use the info option to see package descriptions from repos.
# yum info zsh       -Description for zsh package
# yum info word*     -Descriptions for packages beginning with “word”

# yum search vim Search for packages including
#yum list recent-List packages recently added into the repositories.
#yum list updates List  -all  packages  with updates available in the yum reposito-ries.
#yum search packagename-Is used to find any packages matching a string in  the  descrip-
              tion,  summary, packager and package name fields of an rpm
#yum whatprovides
              Is used to find out which package provides some feature or file.

# yum install zsh
# yum install mysql mysql-devel
yum to install a package from a directory on the local computer,
# yum localinstall heyu-2.0beta.3.1-1.i386.rpm
to install all packages in an installation group.
# yum groupinstall XFCE
# yum check-update if your machine  had  any  updates that  needed  to  be  applied  without running it interactively.
# yum list updates openoffice* Find available openoffice* updates
# yum update openoffice* Update all openoffice packages
# yum update -Update all packages with updates ready
# yum groupupdate XFCE Update all packages in XFCE group

# yum remove beagle Removes the beagle package
# yum remove xscreen* Removes packages beginning with xscreen
# yum groupremove XFCE Removes all packages in XFCE group

Using the clean option to yum, you can clean up packages, headers, metadata, cache, and dbcache left around by the yum facility.
If keepcache is set to 1 in /etc/yum.conf, as the packages and headers you request are downloaded, they are saved in packages and headers subdirectories of /var/cache/yum/repo/, respectively.
Metadata are stored in repomd.xml and comps.xml files in the same directory. Here are ways of cleaning out those items:
# yum clean packages Cleans out packages left over in cache
# yum clean metadata Cleans out metadata left over in cache
# yum clean headers

Enabling and disabling repositories
Enabling a Yum Repository
To enable a particular repository or repositories, type the following at a shell prompt as root:
yum-config-manager --enable repository…
where repository is the unique repository ID (use yum repolist all to list available repository IDs).

# yum remove beagle Removes the beagle package
# yum remove xscreen* Removes packages beginning with xscreen
# yum groupremove XFCE Removes all packages in XFCE group

yumdownloader is useful for downloading packages from a yum repository to the local disk
# yumdownloader cacti
# yumdownloader zsh

List the contents of a given package.
$ repoquery --list iftop
              
$ repoquery -q --file /usr/bin/yum
yum-0:3.2.25-1.fc12.noarch



RPM-RPM Package Manager
# rpm -ivh rpmforge-release-0.2-2.2.fc5.rf.x86_64.rpm -Install package
# rpm -ivh http://ftp.belnet.be/packages/dries.ulyssis.org/fedora/fc5/x86_64/RPMS.dries/rpmforge-release-0.2-2.2.fc5.rf.x86_64.rpm -install from internet or ftp.
# rpm -Uhv flash-plugin-9.0.31.0-release.i386.rpm -Upgrading a package
# rpm -e rpmforge-release
Sometimes, such as on 64-bit systems that have 32-bit packages installed for backwards compatibility, you may have two or more versions of a package installed. If you get an error when trying to remove one, you might be able to fix that using a full package name or by removing all matching packages:
# rpm -e --nodeps avahi-0.6.11-3.fc5.i386

This shows how to query installed packages for a package named rsync and display version information about that package (your version numbers may be different):
# rpm -q rsync
rsync-2.6.9-1.FC5.1
U
Set the -qp option to get information about an RPM in the present directory:
# rpm -qp rpmforge-release-0.2-2.2.fc5.rf.x86_64.rpm
list of all the packages installed on your system
# rpm -qa | less

Check a file on your system to see what package the file belongs to, if any:
# rpm -qf /etc/sysctl.conf
initscripts-8.31.6-1
You want to query for information on package.
# rpm -qi rpmforge-release

lists preinstall and postinstall scripts that come with an installed RPM package:
# rpm -q --scripts kernel | less

Rebuilding Your RPM Database
If your RPM database becomes corrupted to the point where you can no longer install packages, you can rebuild the database from the installed package headers. First remove the old database files, and then rebuild the new ones as follows:
# rm /var/lib/rpm/__db.00* remove the db files
# rpm –rebuilddb Rebuild the DB.

apt-get update downloads the package lists from the repositories and "updates" them to get information on the newest versions of packages and their dependencies. It will do this for all repositories and PPAs. From http://linux.die.net/man/8/apt-get:

apt-get upgrade will fetch new versions of packages existing on the machine if APT knows about these new versions by way of apt-get update.


FTP installation

1.yum install vsftpd
vim /etc/vsftpd/vsftpd.conf

2.edit vsftpd.conf in /etc/vsftpd

local_enables=yes
write_enable = yes
anonymous_enable=yes

3 edit the ftpuser and user_list file in /etc/vsftpd and remove the particular user which you are 
using for ftp

4 start ftp service
service vsftpd start

5. if selinux is enabled then access to home directories is denied by selinux
this can be fixed by activating the ftp_home+dir boolean

setsebool -P ftp_home_dir=1

Remote installation using Kick start using ftp server

1.yum install vsftpd
vim /etc/vsftpd/vsftpd.conf

2.edit vsftpd.conf in /etc/vsftpd

local_enables=yes
write_enable = yes
anonymous_enable=yes

3 edit the ftpuser and user_list file in /etc/vsftpd and remove the particular user which you are 
using for ftp

4 start ftp service
service vsftpd start

5. if selinux is enabled then access to home directories is denied by selinux
this can be fixed by activating the ftp_home+dir boolean

setsebool -P ftp_home_dir=1

mkdir /dvd
mount /dev/sr0 /dvd
mkdir /var/ftp/pub/dvdrom
cp -Rvf /dvd/* /var/ftp/pub/dvdrom/

yum install kickstart
then configure kickstart
system-config-kickstart
copy 
ks.cfg file to /var/ftp/pub/
edit it
url --url=ftp://ip address/pub/dvd/

then from client
boot: linux ks=ftp://ip address/pub/ks.cfg


5.1. The NetworkManager Daemon
The NetworkManager daemon runs with root privileges and is usually configured to start up at boot time. You can determine whether the NetworkManager daemon is running by entering this command as root:
~]# service NetworkManager status
NetworkManager (pid  1527) is running...
The service command will report NetworkManager is stopped if the NetworkManager service is not running. To start it for the current session:
~]# service NetworkManager start
Run the chkconfig command to ensure that NetworkManager starts up every time the system boots:
~]# chkconfig NetworkManager on
for static ip should NM_CONTROLLED=no in eth config file

Route

Default route
the trick is simple , first add a route to default gateway itself and then set the default gateway , like this :

route add e.f.g.h/32 dev eth0
route add default gw e.f.g.h

Remove route

route del -net (destination address) netmask (netmask address) gw (gateway address) eth0
static route

route add -net (destination address) netmask (ip address) gw (gateway address) eth0

print route
route -n
route -n

mount iso in linux

3) Use mount command as follows to mount iso file called disk1.iso:
# mount -o loop disk1.iso /mnt/disk
rlease version of redhat
cat /etc/redhat-release
update upper version
yum update -y (for redhat)
do-release-upgrade (for ubuntu system)

taskkill -s 172.25.13.34 /f /IM batmanac.exe(for windows)

for showing particular word in a file
grep -i /etc/sysctl.conf

for free space
parted
print free

full availavalable command in linux
compgen -c
remove aall running processes
disown -r

restriction ip in ftp
tcp-wrapper=yes
put the ip host.deny in /etc/host.deny

3 modes in vi
command mode-dd,yy
insert mode-i edit the file
ex mode-q,wq,
ping and ping6 difference
both aare same host connected or not but ping6 use for ipv6

we want to delete all tar file in home location
find /home -name *.tar | xargs rm -rf 

selinux is acronym for security enhanced linux .it is an acees control imlementation and security control feature for the linux kernel
yum-yellowdog update modifier


for tcpdump promisc should be enble during captuiring

ifconfig eth0 promics -for enable
ifconfig eth0 -promics -for disable

then capture the packet.
tcpdump -w tcp.pcap tcp port ftp or ftp-data.
tcpdump -i etho -w tcp1.pcap -for particular nic card
for read file
tcpdump -r tcp.pcap -for read file
tcpdump -ttttr tcp.pcap for readable time formmat
tcpdump -nn -for live monitoring
tcpdump use libpcap libary for capturing
tcpdump -h for version

user shell are locataed in /etc/profile, /etc/bashrc and /etc/profile.d/

shell settings are determined by command excuted several dot files in the user home directory.

/home/happy/.bash_profile, .bash_login and .profile

when the shell is closed  ./bash_logout file are excuted.

watching

keep an eye on a command 
watch 'cat /proc/cpuinfo'
watch the logs in real time 
tail -f /var/log/messages
find / -name e100 -print
ls -lt -recently changed
ls -lu- recently access
ls -lS -orders file by size
ls -lh - list file sizes human readable format.

sed 's/SEARCH/REPLACE/OPTIONS' FILE.txt

sed -i "s/172.25.11.166/172.25.11.187/g" *.acl




